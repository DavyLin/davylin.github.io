#+AUTHOR: Kinhung Lam
#+EMAIL: linjxljx@gmail.com
#+TITLE: Clojure Programming
#+DATE: <2014-07-23 Wed 11:02>


1.use 用来导入clojure.core命名空间

#+begin_example
user>(clojure.core/use 'clojure.core)
#+end_example

2.import导入java类

#+begin_example
user>(import '(java.io InputStream File))
java.io.File
#+end_example

3.require引入clj到当前命名空间

#+begin_example
user>(require 'clojure.string)
nil
#+end_example

#+MORE_LINK:

4.查看信息

#+begin_example
user>(find-doc "ns-")
#+end_example

5.解构

#+begin_example
user>(let [[x y] [1 2 3]] 
            [x y])
[1 2]
user> (greet-author-2 [fname {:first-name}]
            (println "hello, " fname))
; Evaluation aborted.
user> (let [[_ _ z] [1 2 3]]
    z)
3
user> (let [[_ _ z] [1 2 3]]
    _)
2
user> (require '[clojure.string :as str])
nil
user> (let [[x y :as coords] [1 2 3 4 5 6]]
        (str "x: " x ", y: " y ", total dimensions " (count                 coords)))
"x: 1, y: 2, total dimensions 6"
#+end_example

6.常用数据类型

#+begin_example
Keyword   :tag, :doc
List     (1 2 3), (pringln "foo")
Map  {:name "bill", :age 42}
Set  #{:snap  :crackle  :pop}
Symbol    user/foo,
          java.lang.String
Vector   [1 2 3]
#+end_example

<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss"
        xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
        xmlns:media="http://search.yahoo.com/mrss/"><channel>
<title>Kinhung Lam ∴ A Weblog</title>
<atom:link href="/blog/rss.xml" rel="self" type="application/rss+xml" />
<link>/blog/</link>
<description><![CDATA[]]></description>
<language>en</language>
<pubDate>Fri, 02 Dec 2022 15:40:07 +0800</pubDate>
<lastBuildDate>Fri, 02 Dec 2022 15:40:07 +0800</lastBuildDate>
<generator>Emacs 28.2 Org-mode 9.5.5</generator>
<webMaster>linjxljx@gmail.com (kinhung lam)</webMaster>
<image>
<url>https://orgmode.org/img/org-mode-unicorn-logo.png</url>
<title>Kinhung Lam ∴ A Weblog</title>
<link>/blog/</link>
</image>


<item>
<title>A Client of Webservice by Axis/XFire/CXF</title>
<link>/blog/2014-05-27-ji-yu-axis,-xfire,-cxfde-webserviceke-hu-duan.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-05-27-ji-yu-axis,-xfire,-cxfde-webserviceke-hu-duan.html</guid>
<pubDate>Tue, 27 May 2014 14:59:00 +0800</pubDate>

<description><![CDATA[<p>
##Axis客户端调用 webservice
</p>

<pre class="example" id="org1173ac4">
URL endpointURL = new URL("http://localhost:8080/webservice/HelloService");  
            String requestText = "javalinjx"  
            Service service = new Service();  
            Call call = (Call) service.createCall();  
            call.setTargetEndpointAddress(endpointURL);  
            call.setOperationName("sayHello");  
            call.addParameter("xml", XMLType.XSD_STRING, ParameterMode.IN);  
            call.setReturnClass(String.class);  
            call.setReturnType(XMLType.XSD_STRING);// 设置返回类型  
            Object [] obj = new Object[]{ requestText };  
            String result = (String) call.invoke(obj);
</pre>

<p>
<a href="./blog/2014-05-27-ji-yu-axis,-xfire,-cxfde-webserviceke-hu-duan.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>A note of Understanding the JVM</title>
<link>/blog/2014-04-11-a-note-of-understanding-the-jvm.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-04-11-a-note-of-understanding-the-jvm.html</guid>
<pubDate>Fri, 11 Apr 2014 13:05:00 +0800</pubDate>

<description><![CDATA[<hr />

<p>
##java内存区域和内存溢出异常 ###运行时数据区域 * 程序计数器（Program
Counter Register） * Java虚拟机栈（Java Virtual Machine Stacks） *
本地方法栈（Native Method Stacks） * Java堆（Java Heap） *
方法区（Method Area） * 运行时常量池（Runtime Constant Pool） *
另：直接内存
</p>

<hr />

<p>
###程序计数器
</p>

<p>
程序计数器是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等都需要它来完成。java虚拟机的多线程切换后需要恢复到正确的执行位置都需要一个独立的程序计数器，各线程之间的计数器互不影响，独立存储，所以这类内存区域为“线程私有”的内存。
如果线程正在执行的是一个java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Native方法，这个计数器值则为空（Undefined）。此内存区域是唯一一个在java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。
</p>

<p>
<a href="./blog/2014-04-11-a-note-of-understanding-the-jvm.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Clojure Programming</title>
<link>/blog/2014-07-23-a-note-of-programming-clojure.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-07-23-a-note-of-programming-clojure.html</guid>
<pubDate>Wed, 23 Jul 2014 11:02:00 +0800</pubDate>

<description><![CDATA[<p>
1.use 用来导入clojure.core命名空间
</p>

<pre class="example" id="org9699f2f">
user&gt;(clojure.core/use 'clojure.core)
</pre>

<p>
2.import导入java类
</p>

<pre class="example" id="org2e50774">
user&gt;(import '(java.io InputStream File))
java.io.File
</pre>

<p>
3.require引入clj到当前命名空间
</p>

<pre class="example" id="orgba7ce3f">
user&gt;(require 'clojure.string)
nil
</pre>

<p>
<a href="./blog/2014-07-23-a-note-of-programming-clojure.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>CountDownLatch</title>
<link>/blog/2014-05-10-countdownlatch.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-05-10-countdownlatch.html</guid>
<pubDate>Sat, 10 May 2014 15:29:00 +0800</pubDate>

<description><![CDATA[<p>
###同步工具类之闭锁-CountDownLatch
</p>

<p>
/闭锁/是一种同步工具类，可以延迟线程的进度直到其到达终止状态。闭锁的作用相当于一扇门：在闭锁到达结束状态之前，这扇门一直是关闭的，并且没有
任何线程能通过，当到达结束状态时，这扇门会打开并允许所有的线程通过。当闭锁到达结束状态后，将不会再改变状态，因此这扇门将永远保持打开状态。
闭锁可以用来确保某些活动直到其他活动都完成后才继续执行。
</p>

<p>
*=CountDownLatch=*是一种灵活的闭锁实现，可以在上述各种情况中使用，它可以使一个或多个线程等待一组事件发生。闭锁状态包括一个计数器，该计数器
被初始化为一个正数，表示需要等待的事件数量。=countDown=方法递减计数器，表示有一个事件已经发生了，而await方法等待计数器达到零，这表示所有
需要等待的事件都已经发生。如果计数器的值非零，那么=await=会一直阻塞直到计数器为零，或者等待中的线程中断，或者等待超时。
</p>

<pre class="example" id="org8fdc018">
public class TestHarness {  
    public long timeTasks(int nthreads, final Runnable task) throws InterruptedException {  
        final CountDownLatch startGate = new CountDownLatch(1);  
        final CountDownLatch endGate = new CountDownLatch(nthreads);  

        for (int i = 0; i &lt; nthreads; i++) {  
        Thread t = new Thread(){  
            @Override  
            public void run() {  
                try{  
                    startGate.await();  
                    try{  
                        task.run();  
                    }finally {  
                        endGate.countDown();  
                    }  
                } catch (InterruptedException ignored) {}  
            }  
        };  
        t.start();  
        }  

        long start = System.nanoTime();  
        startGate.countDown();  
        endGate.await();  
        long end = System.nanoTime();  
        return end-start;  
    }  
}  
</pre>

<p>
<a href="./blog/2014-05-10-countdownlatch.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Elasticsearch installed tips</title>
<link>/blog/2015-12-19-centos-elasticsearch-install.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2015-12-19-centos-elasticsearch-install.html</guid>
<pubDate>Sat, 19 Dec 2015 21:53:00 +0800</pubDate>

<description><![CDATA[<p>
<i>1. 下载安装包</i>
</p>

<p>
<i>2. 修改config配置文件</i>
</p>

<p>
<i>3. 运行 ./bin/elasticsearch</i>
</p>

<p>
<i>4. 验证：curl 'http://localhost:9200</i>?pretty'/
</p>

<p>
<b>5. 关闭：curl -XPOST 'http://localhost:9200/<sub>shutdown</sub>'</b>
</p>

<p>
<i>6. 安装head plugin</i>
</p>

<p>
Running as a plugin of ElasticSearch (this is the preferred method)
</p>

<p>
<code>elasticsearch/bin/plugin -install mobz/elasticsearch-head</code>
</p>

<p>
浏览器打开=<a href="http://localhost:9200/_plugin/head/=%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85">http://localhost:9200/_plugin/head/=%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85</a>
</p>
]]></description>
</item>
<item>
<title>Grep and Find</title>
<link>/blog/2014-05-25-grep-and-find.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-05-25-grep-and-find.html</guid>
<pubDate>Sun, 25 May 2014 17:54:00 +0800</pubDate>

<description><![CDATA[<p>
##grep ###1.从文件中查找关键词 <b>grep 'linux' text.txt //查找包含
linux的关键词</b>
</p>

<pre class="example" id="orga074b4e">
[root@localhost ~]# grep 'root' /etc/group
root:x:0:root
bin:x:1:root,bin,daemon
</pre>

<p>
###2.从多个文件中查找关键词
</p>

<pre class="example" id="orgbb83e67">
[root@localhost ~]# grep 'root' /etc/group /etc/my.cnf
/etc/group:root:x:0:root
/etc/my.cnf:user = root
</pre>

<p>
###3.查找当前目录下以及下辖子目录下所有包含str字符串的文件,会列出文件名.以及该行的内容.以及行号
</p>

<p>
<b>-n是打印行号，-r是在子目录也要查询</b>
</p>

<pre class="example" id="org140858a">
grep -n "str" -r ./
</pre>

<p>
<b>用 -i 搜索的时候可以忽略大小写</b>
</p>

<p>
<b>利用 -r 来完成所有的子目录下面执行相应的查找</b>
</p>

<p>
<b>用-l是打印所有的结果</b>
</p>

<p>
<a href="./blog/2014-05-25-grep-and-find.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Looking back on 2016 and looking forward to 2017</title>
<link>/blog/2017-02-04-2016-personal-summary.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2017-02-04-2016-personal-summary.html</guid>
<pubDate>Sat, 04 Feb 2017 11:02:00 +0800</pubDate>

<description><![CDATA[<p>
转眼一年又过去了！大家都很早写好总结和展望了，可是我迟迟未动手，只因为我比较懒。。
</p>

<p>
回顾 2016，真是最幸福的一年，最主要是迎来我的小宝宝，哈哈！
</p>

<div id="outline-container-当然也实现了一些小目标" class="outline-4">
<h4 id="当然也实现了一些小目标"><span class="section-number-4">7.0.1.</span> 当然也实现了一些小目标：</h4>
<div class="outline-text-4" id="text-当然也实现了一些小目标">
<p>
跑了一个半程马拉松，虽然是第一次，但还是成功完赛，并取得了一枚小奖牌；
负责的教育资讯类产品成功上线，虽然目前用户量还不具规模，但也算是小有成就了，希望可以继续变得越来越好！
</p>

<p>
<a href="./blog/2017-02-04-2016-personal-summary.html">Read More →</a>
</p>
</div>
</div>
]]></description>
</item>
<item>
<title>M1 professional training</title>
<link>/blog/2014-06-19-m1-professional-training.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-06-19-m1-professional-training.html</guid>
<pubDate>Thu, 19 Jun 2014 22:36:00 +0800</pubDate>

<description><![CDATA[<p>
昨天过来南京参加公司级的M1经理人培训，希望借此机会，了解公司管理人的发展计划以及职业管理的知识和技能。昨天一过来，向同学了解了南京的相关景点后，就匆忙赶完传说中的夫子庙。
</p>

<p>
*=夫子庙=*，5A级景区，不知道其他地方的人评价如何，我真没发现有什么特别好的地方。只不过是比我们那边的古建筑规模大了点。传说的秦淮河畔，真心感觉不出什么，也许是我的文化底蕴不够吧：）
培训虽然累点，总算还是有点收获的，还要坚持两天。但是今天发生了一件事，让我心碎啊。老婆送给我的天梭表在培训快结束的时候，跟同事的手碰到一起了，镜面破了。。当时我想到的是，完了，回去要挨骂了。
</p>

<p>
晚上又补老姐打来的电话给烦到了，脾气顿时爆发了，再也忍不住了。是气自己的不小心，也是气老姐的不努力，现在外甥女的入学还是个未知数。。真是超级郁闷啊。。
</p>
]]></description>
</item>
<item>
<title>Merge the project forked from github</title>
<link>/blog/2014-08-07-merge-the-project-forked-from-github.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-08-07-merge-the-project-forked-from-github.html</guid>
<pubDate>Thu, 07 Aug 2014 17:24:00 +0800</pubDate>

<description><![CDATA[<p>
Github真是一个好地方，相信很多程序员们都知道！大家在上面可能都有多多少少的个人项目。我们常常会关注自己兴趣以及xx大牛的项目，甚至于fork牛人们的项目，慢慢研究。但是牛人们的步伐，岂是偶等可以追逐的，他们可能一天=commit=很多次，这样就会导致我们刚刚=fork=的代码已经不是最新的了，那现在我们就来看下如何更新到原作者的最新代码。
</p>

<p>
<a href="./blog/2014-08-07-merge-the-project-forked-from-github.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Mongo installed and confiure</title>
<link>/blog/2015-12-19-centos-mongo-install.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2015-12-19-centos-mongo-install.html</guid>
<pubDate>Sat, 19 Dec 2015 21:54:00 +0800</pubDate>

<description><![CDATA[<p>
<b>1. 创建 /etc/yum.repos.d/mongodb-org-3.0.repo</b>
</p>

<pre class="example" id="orgd9e2ef4">
[mongodb-org-3.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/
gpgcheck=0
enabled=1
</pre>

<p>
<b>2. yum安装mongo</b>
</p>

<p>
<code>sudo yum install -y mongodb-org</code>
</p>

<p>
或者 指定版本
</p>

<p>
<code>sudo yum install -y mongodb-org-3.0.7 mongodb-org-server-3.0.7 mongodb-org-shell-3.0.7 mongodb-org-mongos-3.0.7 mongodb-org-tools-3.0.7</code>
</p>

<p>
为了阻止以后更新，你可能需要修改/etc/yum.conf文件，添加配置：
</p>

<p>
<code>exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools</code>
</p>

<p>
<a href="./blog/2015-12-19-centos-mongo-install.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Mysql installed and configure</title>
<link>/blog/2015-12-19-centos-mysql-install.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2015-12-19-centos-mysql-install.html</guid>
<pubDate>Sat, 19 Dec 2015 21:52:00 +0800</pubDate>

<description><![CDATA[<p>
原来是rpm安装，检查并卸载
</p>

<pre class="example" id="orgd0e25fc">
rpm -qa|grep -i mysql
rpm -ev MySQL-service-5.6.25-1.el7.x86_64
rpm -ev MySQL-client-5.6.25-1.el7.x86_64
</pre>

<p>
原来是yum安装，检查并卸载 <code>rpm -qa|grep mysql</code>
</p>

<p>
一般输出内容如下：
</p>

<pre class="example" id="orgeb6ada1">
mysql-community-release-el7-5.noarch
mysql-community-client-5.7.7-0.3.rc.el7.x86_64
mysql-community-libs-5.7.7-0.3.rc.el7.x86_64
mysql-community-server-5.7.7-0.3.rc.el7.x86_64
mysql-community-common-5.7.7-0.3.rc.el7.x86_64
mysql-community-libs-compat-5.7.7-0.3.rc.el7.x86_64
</pre>

<p>
<a href="./blog/2015-12-19-centos-mysql-install.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Setting up this blog</title>
<link>/blog/2014-07-18-a-store.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-07-18-a-store.html</guid>
<pubDate>Fri, 18 Jul 2014 16:09:00 +0800</pubDate>

<description><![CDATA[<p>
<b><i>--来源于互联网的小故事，虽然可能是某些人丰富想象力的创作，但我觉得挺有意思的，在这里做个记录</i></b>
</p>

<p>
*=25岁毕业=*，拿一万块钱月薪
</p>

<p>
*=30岁=*，涨到一万五，期间无女盆友，吃10块钱盖饭，跟同学合租，挤2块钱地铁上下班，存钱25万
</p>

<p>
*=31岁=*，啃老找父母要了35万块钱，买了50平米老房子一处，贷款90万，20年，月供6500。
</p>

<p>
*=35岁0个月=*，认识一4分木耳，接盘玩腻的木耳结婚。
</p>

<p>
*=35岁6个月=*，生了小孩，小孩眉宇间有高富帅的痕迹
</p>

<p>
*=36岁=*，工资涨到2万，木耳要买驴牌，便宜儿子要喝进口奶粉，压力很大
</p>

<p>
*=37岁=*，木耳说，人家的儿子都读花家地，读史家胡同，你也要给咱高富帅的儿子搞个学区房，你这个死没用的东西
</p>

<p>
<a href="./blog/2014-07-18-a-store.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>Setting up this blog</title>
<link>/blog/2014-04-09-my-first-octopress-blog.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-04-09-my-first-octopress-blog.html</guid>
<pubDate>Fri, 24 Mar 2017 18:19:00 +0800</pubDate>

<description><![CDATA[<div id="outline-container-org6d6b6d3" class="outline-4">
<h4 id="org6d6b6d3"><span class="section-number-4">13.0.1.</span> &#x2013;Setting up this blog</h4>
<div class="outline-text-4" id="text-13-0-1">
<p>
:CUSTOM<sub>ID</sub>: setting-up-this-blog
</p>
<p>
Apparently I'm using emacs org mode to power this
blog.Many thanks for the nice framework that save me a lot of time to
get up to speed.I probably wouldn't have decided to move my blog here in
the first place if there weren't ready-to-use solutions for lazy people
like me.
</p>

<p>
Anyway, here's the link to my old blog: <a href="http://javalinjx.iteye.com/">http://javalinjx.iteye.com/</a>
</p>
</div>
</div>
]]></description>
</item>
<item>
<title>Sitemap</title>
<link>/blog/sitemap.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/sitemap.html</guid>
<pubDate>Thu, 01 Dec 2022 14:37:00 +0800</pubDate>

<description><![CDATA[]]></description>
</item>
<item>
<title>This is life</title>
<link>/blog/2014-07-17-this-is-life.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2014-07-17-this-is-life.html</guid>
<pubDate>Thu, 17 Jul 2014 09:52:00 +0800</pubDate>

<description><![CDATA[<p>
上周经历了一次沉重的心路历程，也许是我内心不够强大，也许是每个人遇到相同的问题都会如此反应。不过总的来说是有惊无险，心也就慢慢释然了。同事们都感觉到我的变化，从一个性格相对开朗到如突然间默不做声，大家都表现出对我的关心，但我却无法告诉他们自己的想法！虽然内心比较痛苦，但却充满着温暖，慢慢在安慰着自己。
</p>

<p>
好了，上面的事情就此告一段落了。这阶段，外甥女的入学也搞定了，参加技术培训也完成了，经理人培训也结束了，工作在稳步进行中。总体来看，算是过到了一个平稳期。在工作上，我还想有更好的突破，昨天领导找我了，说今年加薪恐怕不太理想，公司在控制成本。。感觉整个部门都充满着困难和危机。今天离职的兄弟都走了7个了，却只进来两个没多少经验的新人。哎，替部门，替公司担忧！
</p>

<p>
我只能做的是，对自己的生活，工作负责，做*=最好的自己=*！
</p>

<p>
<a href="./blog/2014-07-17-this-is-life.html">Read More →</a>
</p>
]]></description>
</item>
<item>
<title>vsftpd installed and configure</title>
<link>/blog/2015-12-19-centos-vsftpd-install.html</link>
<author>linjxljx@gmail.com (kinhung lam)</author>
<guid isPermaLink="false">/blog/2015-12-19-centos-vsftpd-install.html</guid>
<pubDate>Sat, 19 Dec 2015 21:53:00 +0800</pubDate>

<description><![CDATA[<p>
<b>1. yum install vsftpd</b>
</p>

<p>
<b>2. 配置/etc/vsftpd/vsftpd.conf</b>
</p>

<p>
配置参考如下：
</p>

<pre class="example" id="org67ebeb5">
anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=022
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
ascii_upload_enable=YES
ascii_download_enable=YES
chroot_local_user=YES
chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chroot_list
listen=YES
pam_service_name=vsftpd
userlist_enable=YES
tcp_wrappers=YES
use_localtime=YES
allow_writeable_chroot=YES
</pre>

<p>
<a href="./blog/2015-12-19-centos-vsftpd-install.html">Read More →</a>
</p>
]]></description>
</item>
</channel>
</rss>

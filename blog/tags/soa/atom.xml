<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: soa | 枫中畅游]]></title>
  <link href="http://davylin.github.io/blog/tags/soa/atom.xml" rel="self"/>
  <link href="http://davylin.github.io/"/>
  <updated>2014-07-17T10:08:07+08:00</updated>
  <id>http://davylin.github.io/</id>
  <author>
    <name><![CDATA[Davy Lin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[基于Axis、XFire、CXF的Webservice客户端]]></title>
    <link href="http://davylin.github.io/blog/ji-yu-axis%2C-xfire%2C-cxfde-webserviceke-hu-duan/"/>
    <updated>2014-05-27T14:59:03+08:00</updated>
    <id>http://davylin.github.io/blog/ji-yu-axis,-xfire,-cxfde-webserviceke-hu-duan</id>
    <content type="html"><![CDATA[<h2>Axis客户端调用 webservice</h2>

<p>```
URL endpointURL = new URL(&ldquo;<a href="http://localhost:8080/webservice/HelloService">http://localhost:8080/webservice/HelloService</a>&rdquo;);</p>

<pre><code>        String requestText = "javalinjx"  
        Service service = new Service();  
        Call call = (Call) service.createCall();  
        call.setTargetEndpointAddress(endpointURL);  
        call.setOperationName("sayHello");  
        call.addParameter("xml", XMLType.XSD_STRING, ParameterMode.IN);  
        call.setReturnClass(String.class);  
        call.setReturnType(XMLType.XSD_STRING);// 设置返回类型  
        Object [] obj = new Object[]{ requestText };  
        String result = (String) call.invoke(obj);
</code></pre>

<p>```</p>

<h2>XFire客户端调用</h2>

<p>```
public void call() throws Exception {</p>

<pre><code>    Service service = new ObjectServiceFactory().create(HelloService.class);  
    XFireProxyFactory factory = new XFireProxyFactory(XFireFactory.newInstance().getXFire());  
    String url = "http://localhost:8080/webservice/HelloService";  
    SmsService it = (SmsService)factory.create(service, url);  
    int b = it.sayHello("javalinjx");  
}
</code></pre>

<p>```</p>

<h2>CXF客户端调用</h2>

<p>```
JaxWsProxyFactoryBean factory1 = new JaxWsProxyFactoryBean();<br/>
factory1.setServiceClass(UaAuthInterfaces.class);</p>

<pre><code>    factory1.setAddress("http://localhost:8080/webservices/HelloService");  
    UaAuthInterfaces u = (UaAuthInterfaces) factory1.create();  
            u.sayHello("javalinjx");
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
